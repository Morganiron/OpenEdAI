@using OpenEdAI.Client.Models
@using OpenEdAI.Client.Services
@using System.ComponentModel.DataAnnotations
@inject CoursePersonalizationState PersonalizationState

<EditForm Model="@PersonalizationState.Input" OnValidSubmit="Submit" class="course-input-form">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<label>Topic:</label>
	<InputText @bind-Value="PersonalizationState.Input.Topic" class="form-control" />

	<label>Experience Level:</label>
	<InputSelect @bind-Value="PersonalizationState.Input.ExperienceLevel" class="form-control">
		<option value="">Select</option>
		<option value="Beginner">Beginner</option>
		<option value="Intermediate">Intermediate</option>
		<option value="Advanced">Advanced</option>"
	</InputSelect>

	<label>Additional Context:</label>
	<InputTextArea @bind-Value="PersonalizationState.Input.AdditionalContext" class="form-control" placeholder="(Optional) Additional information to help generate the best plan." />

	<button type="submit" class="button">Generate Course</button>

</EditForm>

@code {
	[Parameter] public EventCallback<CoursePersonalizationInput> OnGenerate { get; set; }

	private async Task Submit()
	{
		if (OnGenerate.HasDelegate)
		{
			await OnGenerate.InvokeAsync(PersonalizationState.Input);
			await PersonalizationState.SaveStateAsync(); // Persist to localStorate
		}
	}
}
