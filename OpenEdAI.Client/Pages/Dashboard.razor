@page "/dashboard"
@attribute [Authorize]
@using Microsoft.AspNetCore.Authorization
@using OpenEdAI.Client.Models
@using OpenEdAI.Client.Components
@using OpenEdAI.Client.Services
@inject Services.CourseService CourseService
@inject Services.CourseProgressService ProgressService

<h2>Your Enrolled Courses</h2>

@if (CourseService == null)
{
	<p>Loading...</p>
}
@if (courses == null){
	<p>Loading...</p>
}
else if (!courses.Any())
{
	<p>You are not enrolled in any courses.</p>
}
else
{
	<div class="course-list">
		@foreach (var course in courses)
		{
					<CourseCard Course="course" Progress="@GetProgressForCourse(course.CourseID)" />
				}
		}
	</div>
}

@code {
	private List<CourseDTO> courses;
	private List<CourseProgressDTO> progressData;

	protected override async Task OnInitializedAsync()
	{
		courses = await CourseService.GetEnrolledCoursesAsync();
		progressData = await ProgressService.GetUserCourseProgressAsync();
	}

	private CourseProgressDTO GetProgressForCourse(int courseId)
	{
		return progressData.FirstOrDefault(p => p.CourseID == courseId)
			?? new CourseProgressDTO
				{
					CourseID = courseId,
					UserID = "",
					UserName = "",
					LessonsCompleted = 0,
					CompletedLessons = new List<int>(),
					CompletionPercentage = 0,
					LastUpdated = DateTime.UtcNow
				};
	}
}
